#列表的方法：
append方法：在列表尾部添加新的元素：t.append('d')
extend方法：接收一个列表作为参数，并将其所有的元素附加到列表中：t1.extend(t2)
sort方法：将列表中的元素从低到高重新排序：t.sort()
对列表元素累加，sum函数，sum(t)
#编写一个nested_sum,接收一个由内嵌的整数列表组成的列表作为形参，并将内嵌列表中的值全部加起来
def nested_sum(t):
    summ=0
    i=0
    for i in range(len(t)):
        summ=summ+sum(t[i])
    print(summ)

#接收一个字符串列表，并返回一个新列表，其元素是大写的字符串
def capitalize_all(t):
    res=[]
    for s in t:
        res.append(s.capitalize())
    return res
#使用capitalize_all来编写一个函数capitalize_nested,接收一个由内嵌字符串列表组成的列表作为形参，并返回一个新列表，其元素为内嵌的大写字符串的列表
def capitalize_nested(t):
    resum=[]
    i=0
    for i in range(len(t)):
        resum.append(capitalize_all(t[i]))
    return resum
#接收一个字符串列表，并返回那些只包含大写字母的字符串
def only_upper(t):
    res=[]
    for s in t:
        if s.isupper():
            res.append(s)
    return res
    
#编写一个函数，接收一个数字列表，并返回其累积和，即一个新的列表，其第i位元素是原始列表的前i+1个元素的和，例如，[1,2,3]的累积和是[1,3,6]
